{"pages":[{"title":"我的文章","text":"","link":"/archive/index.html"},{"title":"404 Not Found：该页无法显示","text":"","link":"/404.html"},{"title":"about","text":"我的简历，喝喝茶","link":"/about/index.html"},{"title":"我的书单","text":"","link":"/book/index.html"},{"title":"分类","text":"","link":"/categories/index.html"},{"title":"course","text":"","link":"/course/index.html"},{"title":"link","text":"","link":"/link/index.html"},{"title":"友情链接","text":"","link":"/links/index.html"},{"title":"msg_board","text":"","link":"/msg_board/index.html"},{"title":"music","text":"","link":"/music/index.html"},{"title":"plan","text":"","link":"/plan/index.html"},{"title":"Repositories","text":"","link":"/repository/index.html"},{"title":"test","text":"","link":"/test/index.html"},{"title":"statement","text":"","link":"/statement/index.html"},{"title":"标签","text":"","link":"/tags/index.html"}],"posts":[{"title":"【hexo】使用typora写文章时，解决Markdown图片存放问题","text":"1、下载typora。 2、配置typora。如下图： 3、在hexo根配置文件（不是主题配置文件）中，设置post_asset_folder为 true。 4、安装插件 asset-image，它会自动修正md文件中图片的相对路径，以便能够在url中正确路由。 1npm install https://github.com/CodeFalling/hexo-asset-image","link":"/2021/01/22/%E3%80%90hexo%E3%80%91%E4%BD%BF%E7%94%A8typora%E5%86%99%E6%96%87%E7%AB%A0%E6%97%B6%EF%BC%8C%E8%A7%A3%E5%86%B3Markdown%E5%9B%BE%E7%89%87%E5%AD%98%E6%94%BE%E9%97%AE%E9%A2%98/"},{"title":"【leetcode】 test","text":"题目：The string “PAYPALISHIRING” is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility) P A H N A P L S I I G Y I R And then read line by line: “PAHNAPLSIIGYIR” Write the code that will take a string and make this conversion given a number of rows: string convert(string s, int numRows); 思路：实际上蕴含着一些规律。把所有answer矩阵中元素的(r,c)坐标（r是行号，c是列号）与对应原字符串s中的位置index（index从0开始）都列出来，你就会发现一个规律：index=r+2*c。是不是很神奇！哈哈哈！ 具体分析如下：==注：n就是题目中的numRows。==例如，n为4，字符串s长度为15（具体内容不重要）。其(r,c)与index映射关系如下： 矩阵中的位置(r,c) 原数组中的位置index (0,0) 0 (0,3) 6 (0,6) 12 (1,0) 1 (1,2) 5 (1,3) 7 (1,5) 11 (1,6) 13 (2,0) 2 (2,1) 4 (2,3) 8 (2,4) 10 (2,6) 14 (3,0) 3 (3,3) 9 我们可以发现一个规律：index=r+2*c。这样我们就可以知道answer矩阵中每个位置应该输出的元素是什么。 ========================================================================= 接下来就要分析矩阵元素的分布规律了。通过画个图就能发现其中的规律。例如，n为7，字符串s长度为31时，分析如下：规律已经很明显了 。按照图上规律，按行遍历矩阵中所有元素的坐标（不存在就不要遍历），然后将(r,c)转化成index，然后输出元素即可。 代码实现如下，时间复杂度应该为$\\ O(n)$： 12345678910111213141516171819202122232425262728293031323334353637383940class Solution {public: string convert(string s, int numRows) { if (s.length() == 0 || numRows &lt;= 1){ return s; } int r = 0, c = 0; int n = numRows; string ans; while (ans.length() &lt; s.length() &amp;&amp; r &lt; n){ c = 0; int swh = 1; int step1 = n - 1 - r; int step2 = n - 1 - step1; if (step1 == 0 || step2 == 0){ while (r+2*c &lt; s.length()){ ans.append(1,s[r+2*c]); c += n-1; } }else { while (r+2*c &lt; s.length()){ ans.append(1,s[r+2*c]); if (swh){ c += step1; swh = 1 - swh; }else{ c += step2; swh = 1 - swh; } } } ++r; } return ans; }}; discuss，比我的思路简介，似乎我想复杂了。直接看代码注释： 1234567891011121314151617181920212223class Solution {public: string convert(string s, int numRows) { vector&lt;string&gt; vs(numRows, \"\"); // Z字型矩阵 int i = 0; while (i &lt; s.length()){ for (int j = 0; j &lt; numRows &amp;&amp; i &lt; s.length(); j++){ //从上到下遍历（包含首行和尾行） vs[j].push_back(s[i++]); } for (int j = numRows - 2; j &gt;= 1 &amp;&amp; i &lt; s.length(); --j){ // 从下到上遍历（不包含首行和尾行） vs[j].push_back(s[i++]); } } string zigzag; for (string &amp;v : vs){ // 最后将vs中每个字符串拼接起来即可 zigzag += v; } return zigzag; }};","link":"/2021/01/12/%E3%80%90leetcode%E3%80%91-test/"},{"title":"【全套教程】如何用github+hex搭建个人博客？","text":"\\# 第一安装配置** 配置直接看这个博客，很直观详细：https://godweiyang.com/2018/04/13/hexo-blog/ # 如果Git配置ssh-key后仍然需要输入密码，如何解决？这是https的事。 解决方法1：用ssh方式克隆仓库。比如： git clone git@github.com:Name/project.git 解决方法2：如果你已经clone了， 将项目下面的.git/config文件中的url地址改成ssh方式即可。如下： _config.yml配置文件也要一并修改，否则部署的时候仍然需要输入密码。如下： 参考：https://blog.csdn.net/baidu_35085676/article/details/53456884 \\# 发布文章：** hexo new post “hello world” hexo g hexo d 延迟大概是半分钟。等待半分钟就会更新到你的博客上啦。 注意：发布完后一定要git保存下hexo，因为文章最终还是保存在hexo下的。写个脚本即可，如下： hexo clean hexo g hexo d git add -A git commit -m “$1” git push origin hexo 脚本运行： bash ./save.sh “你的commit内容” \\# 保存后端hexo（前端不用管，hexo自动部署到github）：** 用git保存所有，则只保存上述红框框内的文件。我们也只需要保存这几个就可以了。 \\# 如何修改hexo的配置？** 1、进度hexo后端文件夹。 2、修改对应的配置文件。 3、git直接上传保存。 \\# 如果换了一台电脑怎么办？** 1、从git上下载hexo后端。 2、安装hexo组件： npm i hexo-cli -g npm install 用hexo -v查看下是否成功。 \\# 开发工具vscode配置：** 1、首先得安装git，并记下git的安装地址，下面要用。 2、按Ctrl+Shift+P，然后跟着下图去做： 在settings.json中添加下面指令（如下图）： “terminal.integrated.shell.windows”: “D:\\Program Files\\Git\\bin\\sh.exe”, 最终效果图如下。你还能输入cmd或bash变来变去，很强大。 还有各种各样shell相关的辅助插件，详细见博文：https://www.cnblogs.com/Sweettesting/p/13827376.html # 如果git add出现 “fatal: in unpopulated submodule XXX” 错误怎么办？ https://blog.csdn.net/qq_36337754/article/details/105425528","link":"/2021/01/22/%E3%80%90%E5%85%A8%E5%A5%97%E6%95%99%E7%A8%8B%E3%80%91%E5%A6%82%E4%BD%95%E7%94%A8github-hex%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9F/"},{"title":"搜索引擎高级搜索","text":"前言：通过多次在谷歌和百度上使用高级搜索，发现，百度与谷歌在收录词条和查询精度上均有较大差距，故推荐在谷歌上使用高级搜索以提高效率。 常用的高级搜索指令：site，filetype，逻辑与或、逻辑非、双引号、通配符*、intitle、allintitle、inurl、allinurl、intext、allintext 更详细：更详细的高级搜索看下面这篇博文，包括搜索引擎高级搜索和本地搜索，整理得非常直观非常好：https://cloud.tencent.com/developer/article/1464793","link":"/2021/01/12/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E9%AB%98%E7%BA%A7%E6%90%9C%E7%B4%A2/"}],"tags":[{"name":"leetcode","slug":"leetcode","link":"/tags/leetcode/"},{"name":"算法","slug":"算法","link":"/tags/%E7%AE%97%E6%B3%95/"}],"categories":[]}