<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>测试页面</title>
      <link href="2022/01/22/%E6%B5%8B%E8%AF%95%E9%A1%B5%E9%9D%A2/"/>
      <url>2022/01/22/%E6%B5%8B%E8%AF%95%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><a id="more"></a><p> <a href="test.sql">test.sql</a> </p><blockquote><p>这里是引用区域。这里是引用区域。这里是引用区域。这里是引用区域。这里是引用区域。这里是引用区域。这里是引用区域。这里是引用区域。这里是引用区域。这里是引用区域。这里是引用区域。这里是引用区域。这里是引用区域。这里是引用区域。这里是引用区域。这里是引用区域。这里是引用区域。这里是引用区域。这里是引用区域。这里是引用区域。</p></blockquote><p><img src="/2022/01/22/%E6%B5%8B%E8%AF%95%E9%A1%B5%E9%9D%A2/attach.bbs.miui.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg" alt="img"></p><p>这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。这是一个测试页面。</p><p>文章，男，满族，1984年6月26日出生于陕西省西安市，中国内地男演员、导演，毕业于中央戏剧学院表演系。</p><p>2004年，参演电视剧《与青春有关的日子》，开始在影视圈崭露头角 [1]  。2005年，拍摄古装剧《锦衣卫》。2007年，主演赵宝刚导演的青春剧《奋斗》； [2]  同年，主演首部电影《走着瞧》。2008年，主演滕华涛执导的电视剧《蜗居》，饰演80后城市青年小贝。 [1]  2009年，在电影《海洋天堂》中扮演自闭症患者王大福；同年参演抗战剧《雪豹》 [3]  。2011年，主演的电视剧《裸婚时代》播出； [4]  同年，连续2年获得北京大学生电影节 [5-6]  最受大学生欢迎男演员奖。2012年，凭借电影《失恋33天》获得第31届大众电影百花奖最佳男主角奖 [7]  ；同年，成立北京君竹影视文化有限公司，并导演第一部影视作品《小爸爸》。<br>2013年2月，主演的电影《西游·降魔篇》在全国上映 [8]  。2014年3月28日，主演的文艺爱情片《我在路上最爱你》在全国上映。2014年12月18日，在姜文执导的动作喜剧片《一步之遥》中扮演武七一角。2016年，主演电视剧《少帅》 [9]  和《剃刀边缘》 [10]  。2017年9月16日，凭借导演的电影《陆垚知马俐》获得第31届中国电影金鸡奖导演处女作奖 [11-12]  。2018年9月30日，主演的喜剧动作电影《胖子行动队》上映。 [13]</p><blockquote><p>2004年，参演电视剧《与青春有关的日子》，开始在影视圈崭露头角 [1]  。2005年，拍摄古装剧《锦衣卫》。2007年，主演赵宝刚导演的青春剧《奋斗》； [2]  同年，主演首部电影《走着瞧》。2008年，主演滕华涛执导的电视剧《蜗居》，饰演80后城市青年小贝。 [1]  2009年，在电影《海洋天堂》中扮演自闭症患者王大福；同年参演抗战剧《雪豹》 [3]  。2011年，主演的电视剧《裸婚时代》播出； [4]  同年，连续2年获得北京大学生电影节 [5-6]  最受大学生欢迎男演员奖。2012年，凭借电影《失恋33天》获得第31届大众电影百花奖最佳男主角奖 [7]  ；同年，成立北京君竹影视文化有限公司，并导演第一部影视作品《小爸爸》。<br>2013年2月，主演的电影《西游·降魔篇》在全国上映 [8]  。2014年3月28日，主演的文艺爱情片《我在路上最爱你》在全国上映。2014年12月18日，在姜文执导的动作喜剧片《一步之遥》中扮演武七一角。2016年，主演电视剧《少帅》 [9]  和《剃刀边缘》 [10]  。2017年9月16日，凭借导演的电影《陆垚知马俐》获得第31届中国电影金鸡奖导演处女作奖 [11-12]  。2018年9月30日，主演的喜剧动作电影《胖子行动队》上映。 [13]</p></blockquote><figure class="highlight hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String args[])</span></span>{</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">&lt;!-- Trigger --&gt;</span><br><span class="line">&lt;button <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">"btn"</span> data-clipboard-text=<span class="hljs-string">"Just because you can doesn't mean you should — clipboard.js"</span>&gt;</span><br><span class="line">    Copy to clipboard</span><br><span class="line">&lt;/button&gt;</span><br></pre></td></tr></tbody></table></figure><p>2004年，参演电视剧《与青春有关的日子》，开始在影视圈崭露头角 [1]  。2005年，拍摄古装剧《锦衣卫》。2007年，主演赵宝刚导演的青春剧《奋斗》； [2]  同年，主演首部电影《走着瞧》。2008年，主演滕华涛执导的电视剧《蜗居》，饰演80后城市青年小贝。 [1]  2009年，在电影《海洋天堂》中扮演自闭症患者王大福；同年参演抗战剧《雪豹》 [3]  。2011年，主演的电视剧《裸婚时代》播出； [4]  同年，连续2年获得北京大学生电影节 [5-6]  最受大学生欢迎男演员奖。2012年，凭借电影《失恋33天》获得第31届大众电影百花奖最佳男主角奖 [7]  ；同年，成立北京君竹影视文化有限公司，并导演第一部影视作品《小爸爸》。<br>2013年2月，主演的电影《西游·降魔篇》在全国上映 [8]  。2014年3月28日，主演的文艺爱情片《我在路上最爱你》在全国上映。2014年12月18日，在姜文执导的动作喜剧片《一步之遥》中扮演武七一角。2016年，主演电视剧《少帅》 [9]  和《剃刀边缘》 [10]  。2017年9月16日，凭借导演的电影《陆垚知马俐》获得第31届中国电影金鸡奖导演处女作奖 [11-12]  。2018年9月30日，主演的喜剧动作电影《胖子行动队》上映。 [13]</p></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用python的cv2绘制任务格壁纸</title>
      <link href="2021/01/24/%E7%94%A8python%E7%9A%84cv2%E7%BB%98%E5%88%B6%E4%BB%BB%E5%8A%A1%E6%A0%BC%E5%A3%81%E7%BA%B8/"/>
      <url>2021/01/24/%E7%94%A8python%E7%9A%84cv2%E7%BB%98%E5%88%B6%E4%BB%BB%E5%8A%A1%E6%A0%BC%E5%A3%81%E7%BA%B8/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><a id="more"></a><p>参考：<a href="https://www.zhihu.com/search?type=content&amp;q=%E6%96%87%E4%BB%B6%E5%91%BD%E5%90%8D">https://www.zhihu.com/search?type=content&amp;q=%E6%96%87%E4%BB%B6%E5%91%BD%E5%90%8D</a>中的“少数派”的图。</p><p><img src="/2021/01/24/%E7%94%A8python%E7%9A%84cv2%E7%BB%98%E5%88%B6%E4%BB%BB%E5%8A%A1%E6%A0%BC%E5%A3%81%E7%BA%B8/clipboard.png" alt="img"></p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> cv2</span><br><span class="line"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np</span><br><span class="line"><span class="hljs-keyword">import</span> win32api, win32con, win32gui</span><br><span class="line"><span class="hljs-keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">set_win_background</span>(<span class="hljs-params">image_name</span>):</span></span><br><span class="line">    key = win32api.RegOpenKeyEx(win32con.HKEY_CURRENT_USER,</span><br><span class="line">                                <span class="hljs-string">"Control Panel\\Desktop"</span>, <span class="hljs-number">0</span>, win32con.KEY_SET_VALUE)</span><br><span class="line">    win32api.RegSetValueEx(key, <span class="hljs-string">"WallpaperStyle"</span>, <span class="hljs-number">0</span>, win32con.REG_SZ, <span class="hljs-string">"2"</span>)</span><br><span class="line">    <span class="hljs-comment"># 2拉伸适应桌面,0桌面居中</span></span><br><span class="line">    win32api.RegSetValueEx(key, <span class="hljs-string">"TileWallpaper"</span>, <span class="hljs-number">0</span>, win32con.REG_SZ, <span class="hljs-string">"0"</span>)</span><br><span class="line">    win32gui.SystemParametersInfo(win32con.SPI_SETDESKWALLPAPER, os.path.join(os.getcwd(),image_name), <span class="hljs-number">1</span> + <span class="hljs-number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fill_rect</span>(<span class="hljs-params">img_arr, start_point, height, width, bgr_color</span>):</span></span><br><span class="line">    cv2.rectangle(img_arr, start_point, (start_point[<span class="hljs-number">0</span>]+<span class="hljs-built_in">int</span>(width), start_point[<span class="hljs-number">1</span>]+<span class="hljs-built_in">int</span>(height)), bgr_color, -<span class="hljs-number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">draw</span>(<span class="hljs-params">image_name</span>):</span></span><br><span class="line">    win_width = win32api.GetSystemMetrics(win32con.SM_CXSCREEN) <span class="hljs-comment"># 1920</span></span><br><span class="line">    win_height = win32api.GetSystemMetrics(win32con.SM_CYSCREEN) <span class="hljs-comment"># 1080</span></span><br><span class="line">    half_win_width = <span class="hljs-built_in">int</span>(win_width/<span class="hljs-number">2</span>)</span><br><span class="line">    half_win_height = <span class="hljs-built_in">int</span>(win_height/<span class="hljs-number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 创建空白图像</span></span><br><span class="line">    image = np.ones((win_height, win_width, <span class="hljs-number">3</span>))*<span class="hljs-number">255</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 手动调参</span></span><br><span class="line">    top_div_line_offset = <span class="hljs-number">28</span></span><br><span class="line">    left_div_line_offset =<span class="hljs-number">65</span></span><br><span class="line">    right_div_line_offset = <span class="hljs-number">65</span></span><br><span class="line">    bottom_div_line_offset = <span class="hljs-number">65</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 画四个矩阵</span></span><br><span class="line">    <span class="hljs-comment"># top_left</span></span><br><span class="line">    start_point = (<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)</span><br><span class="line">    fill_rect(image, start_point=start_point, height=half_win_height+left_div_line_offset, width=half_win_width+top_div_line_offset, bgr_color=(<span class="hljs-number">68</span>,<span class="hljs-number">194</span>,<span class="hljs-number">129</span>)) <span class="hljs-comment"># 颜色是BGR，不是RGB</span></span><br><span class="line">    image = cv2.putText(image, <span class="hljs-string">"work-1"</span>, (start_point[<span class="hljs-number">0</span>] + <span class="hljs-number">30</span>, start_point[<span class="hljs-number">1</span>] + <span class="hljs-number">50</span>), cv2.FONT_HERSHEY_COMPLEX,</span><br><span class="line">                        <span class="hljs-number">1.2</span>, (<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>), <span class="hljs-number">4</span>)  <span class="hljs-comment"># 图像，文字内容， 坐标 ，字体，大小，颜色，字体厚度</span></span><br><span class="line">    <span class="hljs-comment"># top_right</span></span><br><span class="line">    start_point=(half_win_width+top_div_line_offset,<span class="hljs-number">0</span>)</span><br><span class="line">    fill_rect(image, start_point=start_point, height=half_win_height+right_div_line_offset, width=half_win_width-top_div_line_offset, bgr_color=(<span class="hljs-number">1</span>,<span class="hljs-number">205</span>,<span class="hljs-number">252</span>))   <span class="hljs-comment"># 颜色是BGR，不是RGB</span></span><br><span class="line">    image = cv2.putText(image, <span class="hljs-string">"work-2"</span>, (start_point[<span class="hljs-number">0</span>]+<span class="hljs-number">30</span>, start_point[<span class="hljs-number">1</span>]+<span class="hljs-number">50</span>), cv2.FONT_HERSHEY_COMPLEX, <span class="hljs-number">1.2</span>, (<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>),<span class="hljs-number">4</span>)  <span class="hljs-comment"># 图像，文字内容， 坐标 ，字体，大小，颜色，字体厚度</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># bottom_left</span></span><br><span class="line">    start_point=(<span class="hljs-number">0</span>,half_win_height+left_div_line_offset)</span><br><span class="line">    fill_rect(image, start_point=start_point, height=half_win_height-left_div_line_offset, width=half_win_width+bottom_div_line_offset, bgr_color=(<span class="hljs-number">92</span>,<span class="hljs-number">80</span>,<span class="hljs-number">234</span>)) <span class="hljs-comment"># 颜色是BGR，不是RGB</span></span><br><span class="line">    image = cv2.putText(image, <span class="hljs-string">"work-3"</span>, (start_point[<span class="hljs-number">0</span>]+<span class="hljs-number">30</span>, start_point[<span class="hljs-number">1</span>]+<span class="hljs-number">50</span>), cv2.FONT_HERSHEY_COMPLEX, <span class="hljs-number">1.2</span>, (<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>),<span class="hljs-number">4</span>)  <span class="hljs-comment"># 图像，文字内容， 坐标 ，字体，大小，颜色，字体厚度</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># bottom_right</span></span><br><span class="line">    start_point=(half_win_width+bottom_div_line_offset, half_win_height+right_div_line_offset)</span><br><span class="line">    fill_rect(image, start_point=start_point, height=half_win_height-right_div_line_offset, width=half_win_width-bottom_div_line_offset, bgr_color=(<span class="hljs-number">238</span>,<span class="hljs-number">186</span>,<span class="hljs-number">20</span>)) <span class="hljs-comment"># 颜色是BGR，不是RGB</span></span><br><span class="line">    image = cv2.putText(image, <span class="hljs-string">"work-4"</span>, (start_point[<span class="hljs-number">0</span>]+<span class="hljs-number">30</span>, start_point[<span class="hljs-number">1</span>]+<span class="hljs-number">50</span>), cv2.FONT_HERSHEY_COMPLEX, <span class="hljs-number">1.2</span>, (<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>),<span class="hljs-number">4</span>)  <span class="hljs-comment"># 图像，文字内容， 坐标 ，字体，大小，颜色，字体厚度</span></span><br><span class="line"></span><br><span class="line">    cv2.imwrite(image_name, image)</span><br><span class="line"></span><br><span class="line">image_name = <span class="hljs-string">'background.png'</span></span><br><span class="line">draw(image_name)</span><br><span class="line">set_win_background(image_name)</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 壁纸 </tag>
            
            <tag> cv2 </tag>
            
            <tag> 任务格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python读取pdf内容</title>
      <link href="2021/01/24/python%E8%AF%BB%E5%8F%96pdf%E5%86%85%E5%AE%B9/"/>
      <url>2021/01/24/python%E8%AF%BB%E5%8F%96pdf%E5%86%85%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><a id="more"></a><p><strong>pdfminer：</strong><br>pdfminer原理剖析：<a href="https://www.cnblogs.com/wj-1314/p/9429816.html">https://www.cnblogs.com/wj-1314/p/9429816.html</a></p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> pdfminer.pdfparser <span class="hljs-keyword">import</span> PDFParser</span><br><span class="line"><span class="hljs-keyword">from</span> pdfminer.pdfdocument <span class="hljs-keyword">import</span> PDFDocument</span><br><span class="line"><span class="hljs-keyword">from</span> pdfminer.pdfpage <span class="hljs-keyword">import</span> PDFPage</span><br><span class="line"><span class="hljs-keyword">from</span> pdfminer.pdfpage <span class="hljs-keyword">import</span> PDFTextExtractionNotAllowed</span><br><span class="line"><span class="hljs-keyword">from</span> pdfminer.pdfinterp <span class="hljs-keyword">import</span> PDFResourceManager</span><br><span class="line"><span class="hljs-keyword">from</span> pdfminer.pdfinterp <span class="hljs-keyword">import</span> PDFPageInterpreter</span><br><span class="line"><span class="hljs-keyword">from</span> pdfminer.pdfdevice <span class="hljs-keyword">import</span> PDFDevice</span><br><span class="line"><span class="hljs-keyword">from</span> pdfminer.layout <span class="hljs-keyword">import</span> LTTextBoxHorizontal,LAParams</span><br><span class="line"><span class="hljs-keyword">from</span> pdfminer.converter <span class="hljs-keyword">import</span> PDFPageAggregator</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getPdfFileList</span>(<span class="hljs-params"><span class="hljs-built_in">dir</span></span>):</span></span><br><span class="line">    files = os.listdir(<span class="hljs-built_in">dir</span>)</span><br><span class="line">    ret = []</span><br><span class="line">    <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> files:</span><br><span class="line">        <span class="hljs-keyword">if</span> os.path.isfile(f) <span class="hljs-keyword">and</span> os.path.splitext(f)[-<span class="hljs-number">1</span>] == <span class="hljs-string">'.pdf'</span>:</span><br><span class="line">            ret.append(f)</span><br><span class="line">    <span class="hljs-keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">parsePdf</span>(<span class="hljs-params">pdf</span>):</span></span><br><span class="line">    fp = <span class="hljs-built_in">open</span>(pdf, <span class="hljs-string">'rb'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 创建一个PDF文档解析器对象</span></span><br><span class="line">    parser = PDFParser(fp)</span><br><span class="line">    <span class="hljs-comment"># 创建一个PDF文档对象存储文档结构</span></span><br><span class="line">    <span class="hljs-comment"># 提供密码初始化，没有就不用传该参数</span></span><br><span class="line">    document = PDFDocument(parser)</span><br><span class="line">    <span class="hljs-comment"># 检查文件是否允许文本提取</span></span><br><span class="line">    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> document.is_extractable:</span><br><span class="line">        <span class="hljs-keyword">raise</span> PDFTextExtractionNotAllowed</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 创建一个PDF资源管理器对象来存储共享资源</span></span><br><span class="line">    rsrcmgr = PDFResourceManager()</span><br><span class="line"></span><br><span class="line">    laparams = LAParams()</span><br><span class="line">    device = PDFPageAggregator(rsrcmgr, laparams=laparams)</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 创建一个PDF解析器对象</span></span><br><span class="line"></span><br><span class="line">    interpreter = PDFPageInterpreter(rsrcmgr, device)</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 处理文档当中的每个页面</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">for</span> page <span class="hljs-keyword">in</span> PDFPage.create_pages(document):</span><br><span class="line">        interpreter.process_page(page)</span><br><span class="line">        layout = device.get_result()</span><br><span class="line">        <span class="hljs-comment"># 这里layout是一个LTPage对象 里面存放着 这个page解析出的各种对象</span></span><br><span class="line">        <span class="hljs-comment"># 一般包括LTTextBox, LTFigure, LTImage, LTTextBoxHorizontal 等等</span></span><br><span class="line">        <span class="hljs-comment"># 想要获取文本就获得对象的text属性，</span></span><br><span class="line">        <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> layout:</span><br><span class="line">            print(<span class="hljs-string">"------------------------------------------------------------------------"</span>)</span><br><span class="line">            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">isinstance</span>(x, LTTextBoxHorizontal)):</span><br><span class="line">                txt = x.get_text()</span><br><span class="line">                print(txt)</span><br><span class="line">            <span class="hljs-keyword">break</span></span><br><span class="line">        <span class="hljs-keyword">break</span></span><br><span class="line"></span><br><span class="line">pdfs = getPdfFileList(<span class="hljs-string">"."</span>)</span><br><span class="line"><span class="hljs-keyword">for</span> pdf <span class="hljs-keyword">in</span> pdfs:</span><br><span class="line">    parsePdf(pdf)</span><br></pre></td></tr></tbody></table></figure><p><strong>PyPDF2获取pdf文件属性：</strong></p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> PyPDF2 <span class="hljs-keyword">import</span> PdfFileWriter, PdfFileReader</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getPdfFileList</span>(<span class="hljs-params"><span class="hljs-built_in">dir</span></span>):</span></span><br><span class="line">    files = os.listdir(<span class="hljs-built_in">dir</span>)</span><br><span class="line">    ret = []</span><br><span class="line">    <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> files:</span><br><span class="line">        <span class="hljs-keyword">if</span> os.path.isfile(f) <span class="hljs-keyword">and</span> os.path.splitext(f)[-<span class="hljs-number">1</span>] == <span class="hljs-string">'.pdf'</span>:</span><br><span class="line">            ret.append(f)</span><br><span class="line">    <span class="hljs-keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">parsePdf</span>(<span class="hljs-params">pdf</span>):</span></span><br><span class="line">    fp = <span class="hljs-built_in">open</span>(pdf, <span class="hljs-string">'rb'</span>)</span><br><span class="line">    pdf_reader = PdfFileReader(fp) <span class="hljs-comment"># 打开并建立一个PDF文件对象</span></span><br><span class="line">    paper_title = pdf_reader.getDocumentInfo().title  <span class="hljs-comment"># 获取PDF标题</span></span><br><span class="line">    paper_title = <span class="hljs-built_in">str</span>(paper_title)  <span class="hljs-comment"># 标题字符化</span></span><br><span class="line">    <span class="hljs-built_in">print</span> (paper_title)</span><br><span class="line"></span><br><span class="line">pdfs = getPdfFileList(<span class="hljs-string">"."</span>)</span><br><span class="line"><span class="hljs-keyword">for</span> pdf <span class="hljs-keyword">in</span> pdfs:</span><br><span class="line">    parsePdf(pdf)</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pdf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL指令总结</title>
      <link href="2021/01/24/MySQL%E6%8C%87%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
      <url>2021/01/24/MySQL%E6%8C%87%E4%BB%A4%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><a id="more"></a><p>通过SQL的 GRANT 命令，指定数据库TUTORIALS添加用户 zara ，密码为 zara123 。</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant select,insert,update,delete,create,drop on TUTORIALS.* to 'zara'@'localhost' identified by '123';  # 如果没有identified by '123'，则会把用户密码给清掉</span><br></pre></td></tr></tbody></table></figure><p>显示数据表的属性：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show columns from runoob_tbl;</span><br></pre></td></tr></tbody></table></figure><p>显示数据表详细的索引信息：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show index from runoob_tbl;</span><br></pre></td></tr></tbody></table></figure><p>显示数据库所有数据表的信息：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">show table status from RUNOOB;   # 显示数据库 RUNOOB 中所有表的信息</span><br><span class="line">show table status from RUNOOB like 'runoob%';     # 表名以runoob开头的表的信息</span><br><span class="line">show table status from RUNOOB like 'runoob%'\G;   # 加上 \G，查询结果按列打印</span><br></pre></td></tr></tbody></table></figure><p>先看数据表属性：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc RUNOOB;</span><br></pre></td></tr></tbody></table></figure><p>使用mysql二进制方式连接：</p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p -h ip_addr</span><br></pre></td></tr></tbody></table></figure><p>创建数据库：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database 数据库名;</span><br></pre></td></tr></tbody></table></figure><p>使用mysqladmin创建数据库：</p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u root -p create RUNOOB</span><br></pre></td></tr></tbody></table></figure><p>删除数据库：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database &lt;数据库名&gt;;</span><br></pre></td></tr></tbody></table></figure><p>选择数据库：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use RUNOOB;</span><br></pre></td></tr></tbody></table></figure><p>创建数据库表：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create table if not exists `runoob_tbl`(</span><br><span class="line">   `runoob_id` INT UNSIGNED AUTO_INCREMENT,</span><br><span class="line">   `runoob_title` VARCHAR(100) NOT NULL,</span><br><span class="line">   `runoob_author` VARCHAR(40) NOT NULL,</span><br><span class="line">   `submission_date` DATE,</span><br><span class="line">   PRIMARY KEY ( `runoob_id` )</span><br><span class="line">)ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br></pre></td></tr></tbody></table></figure><p>删除数据表：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table table_name;</span><br></pre></td></tr></tbody></table></figure><p>插入数据：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into table_name(field1, field2,..fieldN) values(value1,value2,...valueN);</span><br></pre></td></tr></tbody></table></figure><p>更新数据：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update table_name set field1=new_val1, field2=new_val2;</span><br></pre></td></tr></tbody></table></figure><p>删除语句：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from table_name where field1=target_val1</span><br></pre></td></tr></tbody></table></figure><p>正则表达式：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT name FROM person_tbl WHERE name REGEXP '^st';</span><br></pre></td></tr></tbody></table></figure><p>事务处理：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">begin; # 开始事务</span><br><span class="line">rollback; # 回滚，只有在事务中才可以回滚</span><br><span class="line">commit; # 提交事务</span><br></pre></td></tr></tbody></table></figure><p>删除、添加和修改字段：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alter table test drop i; # 删除字段</span><br><span class="line">alter table test add i int; # 添加字段</span><br><span class="line">alter table test add i int first; # 添加字段到最前面</span><br><span class="line">alter table test add i int after c; # 添加字段到c后面</span><br></pre></td></tr></tbody></table></figure><p>修改字段类型及名称（modify只修改字段类型；change既修改字段名，也修改字段类型）：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alter table test modify c char(10);</span><br><span class="line">alter table test change i j bigint;</span><br><span class="line">alter table test change j j int;</span><br></pre></td></tr></tbody></table></figure><p>修改字段的是否允许NULL和默认值：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table test modify j bigint not null default 100;</span><br></pre></td></tr></tbody></table></figure><p>修改i字段默认值：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table test alter i set default 1000;</span><br></pre></td></tr></tbody></table></figure><p>删除i字段默认值：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table test alter i drop default;</span><br></pre></td></tr></tbody></table></figure><p>修改数据表属性：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table test engine = MYISAM;</span><br></pre></td></tr></tbody></table></figure><p>修改表名：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table test rename to test2;</span><br></pre></td></tr></tbody></table></figure><hr><p>创建索引：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create index indexName ON mytable(username(length));</span><br></pre></td></tr></tbody></table></figure><p>修改表结构（添加索引）：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table tableName add index indexName(columnName)</span><br></pre></td></tr></tbody></table></figure><p>创建数据表的时候直接指定：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table mytable(</span><br><span class="line">id int not null,</span><br><span class="line">    username varchar(16) not null,</span><br><span class="line">    index [indexName] (username(length))</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p>删除索引：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop index [indexName] on mytable;</span><br></pre></td></tr></tbody></table></figure><p>创建唯一索引（它与前面的普通索引类似，不同的就是：索引列的值必须唯一，但允许有空值。如果是组合索引，则列值的组合必须唯一）：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create unique index indexName on mytable(username(length))</span><br></pre></td></tr></tbody></table></figure><p>修改数据表结构添加唯一索引：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table mytable add unique [indexName](username(length))</span><br></pre></td></tr></tbody></table></figure><p>创建数据表时直接指定唯一索引：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table mytable(</span><br><span class="line">id int not null,</span><br><span class="line">username varchar(16) not null,</span><br><span class="line">unique [indexName](username(length))</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p>使用alter命令添加和删除索引：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alter table tbl_name add primary key(column_list); # 该语句添加一个主键，这意味着索引值必须是唯一的，且不能为NULL。</span><br><span class="line">alter table tbl_name add unique index_name(column_list); # 这条语句创建索引的值必须是唯一的（除了NULL外，NULL可能会出现多次）。</span><br><span class="line">alter table tbl_name add index index_name(column_list); # 添加普通索引，索引值可出现多次。</span><br><span class="line">alter table tbl_name add fulltext index_name(column_list); # 该语句指定了索引为 FULLTEXT ，用于全文索引。</span><br></pre></td></tr></tbody></table></figure><p>实例：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table test add index(c); # 添加普通索引</span><br><span class="line">alter table test drop index c; # 删除索引</span><br></pre></td></tr></tbody></table></figure><p>使用alter命令为i添加和删除主键：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alter table test modify i int not null;</span><br><span class="line">alter table test add primary key(i);</span><br><span class="line">alter table test drop primary key;</span><br></pre></td></tr></tbody></table></figure><p>显示索引：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show index from table_name;</span><br></pre></td></tr></tbody></table></figure><hr><p>临时表：MySQL 临时表在我们需要保存一些临时数据时是非常有用的。临时表只在当前连接可见，当关闭连接时，Mysql会自动删除表并释放所有空间。show tables是看不到临时表的，从第一次insert数据之后才会创建，连接关闭后会自动释放。</p><p>创建临时表：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create temporary table SalesSummary(</span><br><span class="line">product_name varchar(50) not null,</span><br><span class="line">    total_sales decimal(12,2) not null default 0.00,</span><br><span class="line">    avg_unit_price decimal(7,2) not null default 0.00,</span><br><span class="line">    total_units_sold int unsigned not null default 0</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p>删除临时表：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table SalesSumary;</span><br></pre></td></tr></tbody></table></figure><hr><p>复制表：</p><p>1、获取数据表的完整结构：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">show create table test;</span><br><span class="line">#返回结果：</span><br><span class="line">CREATE TABLE `test` (</span><br><span class="line">  `id` int(5) DEFAULT NULL,</span><br><span class="line">  `i2` bigint(20) NOT NULL DEFAULT '100',</span><br><span class="line">  `svrzhang` int(11) DEFAULT '43232',</span><br><span class="line">  KEY `i2` (`i2`),</span><br><span class="line">  KEY `i2_2` (`i2`)</span><br><span class="line">) ENGINE=MyISAM DEFAULT CHARSET=latin1clone_test </span><br></pre></td></tr></tbody></table></figure><p>2、修改sql语句中的数据表名：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `clone_mtest` (</span><br><span class="line">  `id` int(5) DEFAULT NULL,</span><br><span class="line">  `i2` bigint(20) NOT NULL DEFAULT '100',</span><br><span class="line">  `svrzhang` int(11) DEFAULT '43232',</span><br><span class="line">  KEY `i2` (`i2`),</span><br><span class="line">  KEY `i2_2` (`i2`)</span><br><span class="line">) ENGINE=MyISAM DEFAULT CHARSET=latin1clone_test </span><br></pre></td></tr></tbody></table></figure><p>3、将数据旧数据拷贝到新表中去：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into clone_test select * from test;</span><br></pre></td></tr></tbody></table></figure><p>元数据：数据库服务器自身的一些属性。一般放在CHARACTER_SETS中。</p><p>序列使用（就是AUTO_INCREMENT）：</p><p>创建表时设置主键和自增序列（自增序列必须是主键）：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create table test(</span><br><span class="line">id int unsigned not null auto_increment,</span><br><span class="line">    primary key(id),</span><br><span class="line">    name varchar(30) not null,</span><br><span class="line">    data data not null,</span><br><span class="line">    origin varchar(30) not null</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure><p>重置序列。如果你删除了数据表中的多条记录，并希望对剩下数据的AUTO_INCREMENT列进行重新排列，那么你可以通过删除自增的列，然后重新添加来实现。 不过该操作要非常小心，如果在删除的同时又有新记录添加，有可能会出现数据混乱。</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table test drop id; # 删掉id</span><br><span class="line">alter table test add id int unsigned not null auto_increment first, add primary key(id); # 重新将id添加回来，会自动生成序列</span><br></pre></td></tr></tbody></table></figure><p>修改序列的开始值：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create table test(</span><br><span class="line">id int unsigned not null auto_increment,</span><br><span class="line">    primary key(id),</span><br><span class="line">    name varchar(30) not null,</span><br><span class="line">    date date not null,</span><br><span class="line">    origin varchar(30) not null</span><br><span class="line">)engine=innodb auto_increment=100 charset=utf8;</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table test auto_increment = 100;</span><br></pre></td></tr></tbody></table></figure><hr><p>防止表中出现重复数据：你可以在 MySQL 数据表中设置指定的字段为 <strong>PRIMARY KEY（主键）</strong> 或者 <strong>UNIQUE（唯一）</strong> 索引来保证数据的唯一性。</p><p>统计重复数据：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*) as c1 from test group by i2,svrzhang having c1 &gt; 1;</span><br></pre></td></tr></tbody></table></figure><p>过滤重复数据：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select distinct last_name,from_name from test;</span><br><span class="line">或</span><br><span class="line">select last_name,first_name from test group by (id);</span><br></pre></td></tr></tbody></table></figure><p>删除重复数据：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create table tmp select * from test group by i2;</span><br></pre></td></tr></tbody></table></figure><hr><p>修改数据表中单个字段的编码格式：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE `tablename` CHANGE `字段名1` `字段名2` VARCHAR(36) CHARACTER SET utf8 NOT NULL;</span><br></pre></td></tr></tbody></table></figure><p>修改数据表中所有字段的编码格式：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table `tablename` convert to character set utf8; </span><br></pre></td></tr></tbody></table></figure><hr><p><strong>经典SQL练习笔记：</strong></p><p><strong>group by后的属性值，可以再通过下面方式横向显示出来</strong></p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sum(case when Cid="01" then score else null end)c1,</span><br><span class="line">sum(case when Cid="02" then score else null end)c2,</span><br><span class="line">sum(case when Cid="03" then score else null end)c3</span><br></pre></td></tr></tbody></table></figure><p>例如：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select Sid, score, </span><br><span class="line">    sum(case when Cid=01 then Cid else null end)c1,</span><br><span class="line">    sum(case when Cid=02 then Cid else null end)c2,</span><br><span class="line">    sum(case when Cid=03 then Cid else null end)c3 </span><br><span class="line">from SC group by Sid;</span><br></pre></td></tr></tbody></table></figure><p><strong>经典题目：</strong></p><p>查询各科成绩最高分、最低分和平均分，以如下形式显示：课程 ID，课程 name，最高分，最低分，平均分，及格率，中等率，优良率，优秀率(及格为&gt;=60，中等为：70-80，优良为：80-90，优秀为：&gt;=90）。<br>要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select b.Cname, a.* from</span><br><span class="line">(select Cid, max(score)max, min(score)min, avg(score)avg,</span><br><span class="line">count(*)选修人数,</span><br><span class="line">sum(case when score &gt;= 60 then 1 else 0 end)及格率,</span><br><span class="line">    sum(case when score &gt;= 70 and score &lt;= 80 then 1 else 0 end)中等率,</span><br><span class="line">    sum(case when score &gt;= 80 and score &lt;= 90 then 1 else 0 end)优良率,</span><br><span class="line">    sum(case when score &gt;= 90 then 1 else 0 end)优秀率</span><br><span class="line">from SC group by Cid order by 选修人数 desc) a join Course b on a.Cid = b.Cid order by a.Cid asc;</span><br></pre></td></tr></tbody></table></figure><p><strong>添加一列rank字段，显示排名：</strong></p><p>from后面是变量初始化。</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select a.*, @curRank:=@curRank+1 as rank from (select @curRank := 0) p,(select Sid,avg(score)avg from SC group by Sid order by avg desc) a;</span><br></pre></td></tr></tbody></table></figure><p><strong>按平均成绩进行排序，显示总排名和各科排名，Score 重复时保留名次空缺</strong>：</p><p>题目答案，但是我没有rank()函数（对应成绩相同的情况，如何处理完全取决于rank()函数是怎么实现的）。</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select s.*, rank_01, rank_02, rank_03, rank_total</span><br><span class="line">from student s</span><br><span class="line">    left join (select sid, rank() over(partition by cid order by score desc) as rank_01 from sc where cid=01) A on s.sid=A.sid</span><br><span class="line">    left join (select sid, rank() over(partition by cid order by score desc) as rank_02 from sc where cid=02) B on s.sid=B.sid</span><br><span class="line">    left join (select sid, rank() over(partition by cid order by score desc) as rank_03 from sc where cid=03) C on s.sid=C.sid</span><br><span class="line">    left join (select sid, rank() over(order by avg(score) desc) as rank_total from sc group by sid) D on s.sid=D.sid</span><br><span class="line">order by rank_total asc</span><br></pre></td></tr></tbody></table></figure><p>我自己的答案：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select s.*, rank1, rank2, rank3, rankall</span><br><span class="line">from Student s</span><br><span class="line">    left join (select Sid,@curRank1:=@curRank1+1 as rank1 from SC, (select @curRank1 := 0) p  where Cid = "01" order by score desc) A on A.Sid = s.Sid</span><br><span class="line">    left join (select Sid,@curRank2:=@curRank2+1 as rank2 from SC, (select @curRank2 := 0) p  where Cid = "02" order by score desc) B on B.Sid = s.Sid</span><br><span class="line">    left join (select Sid,@curRank3:=@curRank3+1 as rank3 from SC, (select @curRank3 := 0) p  where Cid = "03" order by score desc) C on C.Sid = s.Sid</span><br><span class="line">    left join (select Sid,@curRank4:=@curRank4+1 as rankall from (select Sid, avg(score)avg from SC group by Sid order by avg desc) a, (select @curRank4 := 0) p) D on D.Sid = s.Sid</span><br><span class="line">order by rankall asc;</span><br></pre></td></tr></tbody></table></figure><p>实际上是解决了这几个子问题：对课程01进行排名；对课程02进行排名；对课程03进行排名；根据每个同学的平均成绩进行排名。最后将这些子问题用left join结合在一起直接出答案。</p><p><strong>查询各科成绩前三名的记录</strong>：直接求出各科排名，然后取前三名即可。</p><p><strong>查询和“01”学号同学学习的课程完全相同的其他同学的id：</strong></p><p>group_concat()函数把各个Cid合并成一个字符串并统一按升序，然后比较这个合并后的字符串即可。实质就是将每个学生的信息进行聚合，然后用聚合后的Cid字符串进行比较。最后把自己刨除掉即可。</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select a.Sid, group_concat(cid order by cid) as Cids from SC a where a.Sid &lt;&gt; "01" group by a.Sid having Cids = (select group_concat(cid order by cid) as Cids from SC where Sid = "01" group by sid)</span><br></pre></td></tr></tbody></table></figure><p><strong>按各科成绩进行排序，并显示排名， Score 重复时保留名次空缺：</strong></p><p>在条件a.cid = b.cid and a.score &lt; b.score下，SC left join SC的结果（所有属性排列顺序：a.sid, a.cid, a.score, b.sid, b.cid, b.score）是：从笛卡尔积中，将所有同一cid下a.score值小于b.score的情况筛选出来，最终情况就是，如果对a.sid和a.cid进行group，那么每一个group中的a.score均小于b.score，每一个组中元素的数量就是在同一cid下比a.score分数高的同学数量，同一cid下a.score的排名就是count(b.score)+1，重复时保留名次空缺，正好符合题目。</p><p>注意：一定要用left join，否则第一名由于group元素为空而不存在。</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select a.sid, a.cid, count(b.score)+1 rank</span><br><span class="line">from SC as a</span><br><span class="line">left join SC as b</span><br><span class="line">on a.cid = b.cid and a.score &lt; b.score</span><br><span class="line">group by a.sid, a.cid</span><br><span class="line">order by a.cid asc, rank asc</span><br></pre></td></tr></tbody></table></figure><p><strong>查询学生的总成绩，并进行排名，总分重复时不保留名次空缺：</strong></p><p>注意：这个题目是“总分重复时不保留名次空缺”，所以只能使用变量法，而不能使用上题中技巧。</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select Sid, sum, @rank_i:=@rank_i+1 rank from (select @rank_i:=0) a,(select Sid, sum(score)sum from SC group by Sid order by sum desc) b </span><br></pre></td></tr></tbody></table></figure><hr><p>练习：<a href="test.sql">test.sql</a></p></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux指令：统计行数</title>
      <link href="2021/01/24/linux%E6%8C%87%E4%BB%A4%EF%BC%9A%E7%BB%9F%E8%AE%A1%E8%A1%8C%E6%95%B0/"/>
      <url>2021/01/24/linux%E6%8C%87%E4%BB%A4%EF%BC%9A%E7%BB%9F%E8%AE%A1%E8%A1%8C%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><a id="more"></a><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll *.c | wc -l</span><br></pre></td></tr></tbody></table></figure><p><img src="/2021/01/24/linux%E6%8C%87%E4%BB%A4%EF%BC%9A%E7%BB%9F%E8%AE%A1%E8%A1%8C%E6%95%B0/clipboard.png" alt="img"></p></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux指令：打印某一列</title>
      <link href="2021/01/24/linux%E6%8C%87%E4%BB%A4%EF%BC%9A%E6%89%93%E5%8D%B0%E6%9F%90%E4%B8%80%E5%88%97/"/>
      <url>2021/01/24/linux%E6%8C%87%E4%BB%A4%EF%BC%9A%E6%89%93%E5%8D%B0%E6%9F%90%E4%B8%80%E5%88%97/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><a id="more"></a><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll *.c | awk -F' ' '{print $9}'</span><br></pre></td></tr></tbody></table></figure><p><img src="/2021/01/24/linux%E6%8C%87%E4%BB%A4%EF%BC%9A%E6%89%93%E5%8D%B0%E6%9F%90%E4%B8%80%E5%88%97/clipboard.png" alt="img"></p></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个shell脚本调用另一个shell脚本</title>
      <link href="2021/01/24/%E4%B8%80%E4%B8%AAshell%E8%84%9A%E6%9C%AC%E8%B0%83%E7%94%A8%E5%8F%A6%E4%B8%80%E4%B8%AAshell%E8%84%9A%E6%9C%AC/"/>
      <url>2021/01/24/%E4%B8%80%E4%B8%AAshell%E8%84%9A%E6%9C%AC%E8%B0%83%E7%94%A8%E5%8F%A6%E4%B8%80%E4%B8%AAshell%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><a id="more"></a><p>三种调用方式，详细看：<a href="https://www.cnblogs.com/houyongchong/p/7904290.html">https://www.cnblogs.com/houyongchong/p/7904290.html</a></p></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言位域（结构体中冒号的用法）</title>
      <link href="2021/01/24/C%E8%AF%AD%E8%A8%80%E4%BD%8D%E5%9F%9F%EF%BC%88%E7%BB%93%E6%9E%84%E4%BD%93%E4%B8%AD%E5%86%92%E5%8F%B7%E7%9A%84%E7%94%A8%E6%B3%95%EF%BC%89/"/>
      <url>2021/01/24/C%E8%AF%AD%E8%A8%80%E4%BD%8D%E5%9F%9F%EF%BC%88%E7%BB%93%E6%9E%84%E4%BD%93%E4%B8%AD%E5%86%92%E5%8F%B7%E7%9A%84%E7%94%A8%E6%B3%95%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><a id="more"></a><p>看博文<a href="https://blog.csdn.net/yihongxiaoxiang/article/details/50327587%EF%BC%8C%E6%9C%80%E5%90%8E%E9%9D%A2%E7%9A%84%E9%82%A3%E4%B8%AA%E4%BE%8B%E5%AD%90%E5%92%8C%E5%9B%BE%E5%BE%88%E7%9B%B4%E8%A7%82%E3%80%82">https://blog.csdn.net/yihongxiaoxiang/article/details/50327587，最后面的那个例子和图很直观。</a></p></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> c语言 </tag>
            
            <tag> 位域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的专属纯色壁纸</title>
      <link href="2021/01/24/%E6%88%91%E7%9A%84%E4%B8%93%E5%B1%9E%E7%BA%AF%E8%89%B2%E5%A3%81%E7%BA%B8/"/>
      <url>2021/01/24/%E6%88%91%E7%9A%84%E4%B8%93%E5%B1%9E%E7%BA%AF%E8%89%B2%E5%A3%81%E7%BA%B8/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><a id="more"></a><p><img src="/2021/01/24/%E6%88%91%E7%9A%84%E4%B8%93%E5%B1%9E%E7%BA%AF%E8%89%B2%E5%A3%81%E7%BA%B8/%E6%88%91%E7%9A%84%E4%B8%93%E5%B1%9E%E7%BA%AF%E8%89%B2%E5%A3%81%E7%BA%B8.jpg" alt="我的专属纯色壁纸"></p></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> 壁纸 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【hexo】新建立的page与主页完全一样，如何解决？</title>
      <link href="2021/01/23/%E3%80%90hexo%E3%80%91%E6%96%B0%E5%BB%BA%E7%AB%8B%E7%9A%84page%E4%B8%8E%E4%B8%BB%E9%A1%B5%E5%AE%8C%E5%85%A8%E4%B8%80%E6%A0%B7%EF%BC%8C%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%EF%BC%9F/"/>
      <url>2021/01/23/%E3%80%90hexo%E3%80%91%E6%96%B0%E5%BB%BA%E7%AB%8B%E7%9A%84page%E4%B8%8E%E4%B8%BB%E9%A1%B5%E5%AE%8C%E5%85%A8%E4%B8%80%E6%A0%B7%EF%BC%8C%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><a id="more"></a><p><strong>原因：</strong><br>这是因为没有找到对应页面。假设新建页面为about，需要在source/about/index.md中写入“layout: abouts”，这个layout所指向的正是真正的abouts.ejs网页（必须指向存在的.ejs页面）。如果你在网页中直接访问<a href="http://localhost:4000/about/%EF%BC%8C%E8%BF%99%E4%B8%AAabout%E6%8C%87%E7%9A%84%E6%98%AF%E8%AE%BF%E9%97%AEsource/about%E6%96%87%E4%BB%B6%E5%A4%B9%EF%BC%8C%E7%84%B6%E5%90%8E%E5%86%8D%E4%BC%9A%E6%A0%B9%E6%8D%AE%E6%AD%A4%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E7%9A%84index.md%E6%96%87%E4%BB%B6%E8%AE%BF%E9%97%AEabouts.ejs%E9%A1%B5%E9%9D%A2%E3%80%82">http://localhost:4000/about/，这个about指的是访问source/about文件夹，然后再会根据此文件夹下的index.md文件访问abouts.ejs页面。</a></p><p><strong>解决方法：</strong><br>将/scaffolds/page.md中的添加上layout即可。如下：</p><figure class="highlight markdown hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: {{ title }}</span><br><span class="line">date: {{ date }}</span><br><span class="line">layout: {{ title }}</span><br><span class="line">---</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【hexo】添加valine留言板</title>
      <link href="2021/01/23/%E3%80%90hexo%E3%80%91%E6%B7%BB%E5%8A%A0valine%E7%95%99%E8%A8%80%E6%9D%BF/"/>
      <url>2021/01/23/%E3%80%90hexo%E3%80%91%E6%B7%BB%E5%8A%A0valine%E7%95%99%E8%A8%80%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><a id="more"></a><p>看教程就好：<a href="https://valine.js.org/quickstart.html">https://valine.js.org/quickstart.html</a></p><p><strong>注意：</strong>jQuery和valine的js包都要放在网站最前面的head的中，否则无效。</p></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> valine </tag>
            
            <tag> 留言板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【node.js】简单的爬虫</title>
      <link href="2021/01/23/%E3%80%90node-js%E3%80%91%E7%AE%80%E5%8D%95%E7%9A%84%E7%88%AC%E8%99%AB/"/>
      <url>2021/01/23/%E3%80%90node-js%E3%80%91%E7%AE%80%E5%8D%95%E7%9A%84%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>这是网上别人的一个代码，学习了一下。</p><figure class="highlight javascript hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> axios = <span class="hljs-built_in">require</span>(<span class="hljs-string">"axios"</span>)</span><br><span class="line"><span class="hljs-keyword">var</span> cheerio = <span class="hljs-built_in">require</span>(<span class="hljs-string">"cheerio"</span>)</span><br><span class="line">axios.get(<span class="hljs-string">"https://github.com/weiyinfu?tab=repositories"</span>).then(<span class="hljs-function"><span class="hljs-params">resp</span> =&gt;</span> {</span><br><span class="line">    <span class="hljs-keyword">var</span> $ = cheerio.load(resp.data)</span><br><span class="line">    <span class="hljs-keyword">var</span> lis = $(<span class="hljs-string">"#user-repositories-list li"</span>)</span><br><span class="line">    <span class="hljs-keyword">var</span> repos = []</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; lis.length; i++) {</span><br><span class="line">        <span class="hljs-keyword">var</span> li = lis.eq(i)</span><br><span class="line">        <span class="hljs-keyword">var</span> repo = {</span><br><span class="line">            repoName: li.find(<span class="hljs-string">"h3"</span>).text().trim(),</span><br><span class="line">            repoUrl: li.find(<span class="hljs-string">"h3 a"</span>).attr(<span class="hljs-string">"href"</span>).trim(),</span><br><span class="line">            repoDesc: li.find(<span class="hljs-string">"p"</span>).text().trim(),</span><br><span class="line">            language: li.find(<span class="hljs-string">"[itemprop=programmingLanguage]"</span>).text().trim(),</span><br><span class="line">            star: li.find(<span class="hljs-string">".muted-link.mr-3"</span>).eq(<span class="hljs-number">0</span>).text().trim(),</span><br><span class="line">            fork: li.find(<span class="hljs-string">".muted-link.mr-3"</span>).eq(<span class="hljs-number">1</span>).text().trim(),</span><br><span class="line">            forkedFrom: li.find(<span class="hljs-string">".f6.text-gray.mb-1 a"</span>).text().trim()</span><br><span class="line">        }</span><br><span class="line">        repos.push(repo)</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-built_in">console</span>.log(repos)</span><br><span class="line">})</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>命令行运行：</p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node test.js</span><br></pre></td></tr></tbody></table></figure><hr><p>来源：<a href="https://zhuanlan.zhihu.com/p/53763115">https://zhuanlan.zhihu.com/p/53763115</a></p></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> nodejs </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html布局总结</title>
      <link href="2021/01/23/html%E5%B8%83%E5%B1%80%E6%80%BB%E7%BB%93/"/>
      <url>2021/01/23/html%E5%B8%83%E5%B1%80%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>#水平居中（父div和子div配合）：</p><figure class="highlight html hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-class">.parent</span>{<span class="hljs-attribute">text-align</span>: center;}</span></span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-class">.child</span>{<span class="hljs-attribute">display</span>: inline-block;}</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"parent"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"child"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>asdfasdf哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>asdfasdf哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>#水平居中（只需要设置子div，但需要指定width）：</p><figure class="highlight html hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-class">.child</span>{<span class="hljs-attribute">width</span>:<span class="hljs-number">200px</span>;<span class="hljs-attribute">margin</span>:<span class="hljs-number">0</span> auto;}</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"child"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>asdfasdf哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>asdfasdf哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>#水平居中（只需要设置子div，不需要指定width）：</p><figure class="highlight html hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-class">.child</span>{<span class="hljs-attribute">display</span>:table;<span class="hljs-attribute">margin</span>:<span class="hljs-number">0</span> auto;}</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"child"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>asdfasdf哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>asdfasdf哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>#水平居中（只需设置子div，绝对定位）：</p><figure class="highlight html hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-class">.child</span>{<span class="hljs-attribute">position</span>:absolute;<span class="hljs-attribute">left</span>:<span class="hljs-number">50%</span>;<span class="hljs-attribute">transform</span>:<span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>);}</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"child"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>asdfasdf哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>asdfasdf哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>#水平居中（flex实现）：</p><figure class="highlight html hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="hljs-css"><span class="hljs-comment">/*或者直接用这种方法，不用设置child：.parent{display:flex;justify-content:center;}*/</span></span></span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-class">.parent</span>{<span class="hljs-attribute">display</span>:flex;}</span></span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-class">.child</span>{<span class="hljs-attribute">margin</span>:<span class="hljs-number">0</span> auto;}</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"parent"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"child"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>asdfasdf哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>asdfasdf哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>#垂直居中（只设置父div）：</p><figure class="highlight html hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-class">.parent</span>{<span class="hljs-attribute">display</span>:table-cell;<span class="hljs-attribute">vertical-align</span>:middle;<span class="hljs-attribute">height</span>:<span class="hljs-number">320px</span>;}</span></span><br><span class="line"><span class="hljs-css"><span class="hljs-comment">/*.parent{display:table-cell;vertical-align:middle;height:20px;}，但这个方法只能使1个元素垂直居中*/</span></span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"parent"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"child"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>asdfasdf哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>asdfasdf哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>#垂直居中（flex，只设置父div）：</p><figure class="highlight html hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-class">.parent</span>{<span class="hljs-attribute">display</span>:flex;<span class="hljs-attribute">align-items</span>:center;<span class="hljs-attribute">height</span>:<span class="hljs-number">400px</span>;<span class="hljs-attribute">text-align</span>:center;}</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"parent"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"child"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>asdfasdf哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>#水平和垂直居中（设置父div和子div）：</p><figure class="highlight html hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-class">.parent</span>{<span class="hljs-attribute">display</span>:flex;<span class="hljs-attribute">align-items</span>:center;<span class="hljs-attribute">height</span>:<span class="hljs-number">400px</span>;<span class="hljs-attribute">text-align</span>:center;}</span></span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-class">.child</span>{</span></span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-tag">display</span><span class="hljs-selector-pseudo">:table</span>;</span></span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-tag">margin</span><span class="hljs-selector-pseudo">:0</span> <span class="hljs-selector-tag">auto</span>;</span></span><br><span class="line">}</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"parent"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"child"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>asdfasdf哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>另一方法：</p><figure class="highlight html hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-class">.parent</span>{<span class="hljs-attribute">display</span>:table-cell;<span class="hljs-attribute">vertical-align</span>:middle;<span class="hljs-attribute">text-align</span>:center;<span class="hljs-attribute">height</span>:<span class="hljs-number">300px</span>;<span class="hljs-attribute">width</span>:<span class="hljs-number">300px</span>;}</span></span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-class">.child</span>{<span class="hljs-attribute">display</span>:inline-block;}</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"parent"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"child"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>asdfasdf哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>#水平和垂直居中（flex，只需设置父div）：</p><figure class="highlight html hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-class">.parent</span>{<span class="hljs-attribute">display</span>:flex;<span class="hljs-attribute">justify-content</span>:center;<span class="hljs-attribute">align-items</span>:center;<span class="hljs-attribute">height</span>:<span class="hljs-number">400px</span>;}</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"parent"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"child"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>asdfasdf哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>asdfasdf哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>#左列定宽，右列自适应：</p><figure class="highlight html hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-class">.left</span>{<span class="hljs-attribute">float</span>:left;<span class="hljs-attribute">width</span>:<span class="hljs-number">100px</span>;<span class="hljs-attribute">position</span>:fixed;}</span></span><br><span class="line"><span class="hljs-css"><span class="hljs-selector-class">.right</span>{<span class="hljs-attribute">margin-left</span>:<span class="hljs-number">100px</span>;<span class="hljs-attribute">height</span>:<span class="hljs-number">2000px</span>;}</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"left"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>左列<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"right"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>右列<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>上述布局来自这个网站，更多布局看这个网站：<a href="https://zhuanlan.zhihu.com/p/33013417">https://zhuanlan.zhihu.com/p/33013417</a></p><hr><p>#左中右布局看这个网站：<a href="https://www.cnblogs.com/starxp/articles/4159903.html">https://www.cnblogs.com/starxp/articles/4159903.html</a></p><p>#div居正中看这个：<a href="https://www.cnblogs.com/echolun/p/11353627.html">https://www.cnblogs.com/echolun/p/11353627.html</a></p></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【hexo】添加search搜索功能</title>
      <link href="2021/01/23/%E3%80%90hexo%E3%80%91%E6%B7%BB%E5%8A%A0search%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/"/>
      <url>2021/01/23/%E3%80%90hexo%E3%80%91%E6%B7%BB%E5%8A%A0search%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>看这个教程即可：<a href="https://github.com/wzpan/hexo-generator-search">https://github.com/wzpan/hexo-generator-search</a></p></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 站内搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【hexo】使用typora写文章时，解决Markdown图片存放问题</title>
      <link href="2021/01/22/%E3%80%90hexo%E3%80%91%E4%BD%BF%E7%94%A8typora%E5%86%99%E6%96%87%E7%AB%A0%E6%97%B6%EF%BC%8C%E8%A7%A3%E5%86%B3Markdown%E5%9B%BE%E7%89%87%E5%AD%98%E6%94%BE%E9%97%AE%E9%A2%98/"/>
      <url>2021/01/22/%E3%80%90hexo%E3%80%91%E4%BD%BF%E7%94%A8typora%E5%86%99%E6%96%87%E7%AB%A0%E6%97%B6%EF%BC%8C%E8%A7%A3%E5%86%B3Markdown%E5%9B%BE%E7%89%87%E5%AD%98%E6%94%BE%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>1、下载typora。</p><p>2、配置typora。如下图：</p><p><img src="/2021/01/22/%E3%80%90hexo%E3%80%91%E4%BD%BF%E7%94%A8typora%E5%86%99%E6%96%87%E7%AB%A0%E6%97%B6%EF%BC%8C%E8%A7%A3%E5%86%B3Markdown%E5%9B%BE%E7%89%87%E5%AD%98%E6%94%BE%E9%97%AE%E9%A2%98/clipboard.png" alt="img"></p><p>3、在hexo根配置文件（不是主题配置文件）中，设置post_asset_folder为 true。</p><p>4、安装插件 asset-image，它会自动修正md文件中图片的相对路径，以便能够在url中正确路由。</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【全套教程】如何用github+hex搭建个人博客？</title>
      <link href="2021/01/22/%E3%80%90%E5%85%A8%E5%A5%97%E6%95%99%E7%A8%8B%E3%80%91%E5%A6%82%E4%BD%95%E7%94%A8github-hex%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9F/"/>
      <url>2021/01/22/%E3%80%90%E5%85%A8%E5%A5%97%E6%95%99%E7%A8%8B%E3%80%91%E5%A6%82%E4%BD%95%E7%94%A8github-hex%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p><strong>第一安装配置</strong></p><p>配置直接看这个博客，很直观详细：<a href="https://godweiyang.com/2018/04/13/hexo-blog/">https://godweiyang.com/2018/04/13/hexo-blog/</a></p><p><strong>如果Git配置ssh-key后仍然需要输入密码，如何解决？</strong></p><p>这是https的事。</p><p>解决方法1：用ssh方式克隆仓库。比如：</p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="hljs-built_in">clone</span> git@github.com:Name/project.git</span><br></pre></td></tr></tbody></table></figure><p>解决方法2：如果你已经clone了， 将项目下面的.git/config文件中的url地址改成ssh方式即可。如下：</p><p><img src="/2021/01/22/%E3%80%90%E5%85%A8%E5%A5%97%E6%95%99%E7%A8%8B%E3%80%91%E5%A6%82%E4%BD%95%E7%94%A8github-hex%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9F/clipboard-1611414384061.png" alt="img"></p><p><img src="/2021/01/22/%E3%80%90%E5%85%A8%E5%A5%97%E6%95%99%E7%A8%8B%E3%80%91%E5%A6%82%E4%BD%95%E7%94%A8github-hex%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9F/clipboard-1611414375628.png" alt="img"> </p><p>_config.yml配置文件也要一并修改，否则部署的时候仍然需要输入密码。如下：</p><p><img src="/2021/01/22/%E3%80%90%E5%85%A8%E5%A5%97%E6%95%99%E7%A8%8B%E3%80%91%E5%A6%82%E4%BD%95%E7%94%A8github-hex%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9F/clipboard-1611414365740.png" alt="img"></p><p>参考：<a href="https://blog.csdn.net/baidu_35085676/article/details/53456884">https://blog.csdn.net/baidu_35085676/article/details/53456884</a></p><p><strong>发布文章：</strong></p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="hljs-string">"hello world"</span> </span><br><span class="line">hexo g </span><br><span class="line">hexo d</span><br></pre></td></tr></tbody></table></figure><p>延迟大概是半分钟。等待半分钟就会更新到你的博客上啦。</p><p>注意：发布完后一定要git保存下hexo，因为文章最终还是保存在hexo下的。写个脚本即可，如下：</p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g </span><br><span class="line">hexo d </span><br><span class="line">git add -A git commit -m <span class="hljs-string">"<span class="hljs-variable">$1</span>"</span> </span><br><span class="line">git push origin hexo</span><br></pre></td></tr></tbody></table></figure><p>脚本运行：</p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash ./save.sh <span class="hljs-string">"你的commit内容"</span></span><br></pre></td></tr></tbody></table></figure><p><strong>保存后端hexo（前端不用管，hexo自动部署到github）：</strong></p><p><img src="/2021/01/22/%E3%80%90%E5%85%A8%E5%A5%97%E6%95%99%E7%A8%8B%E3%80%91%E5%A6%82%E4%BD%95%E7%94%A8github-hex%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9F/clipboard-1611414351495.png" alt="img"></p><p>用git保存所有，则只保存上述红框框内的文件。我们也只需要保存这几个就可以了。</p><p><strong>如何修改hexo的配置？</strong></p><p>1、进度hexo后端文件夹。</p><p>2、修改对应的配置文件。</p><p>3、git直接上传保存。</p><p><strong>如果换了一台电脑怎么办？</strong></p><p>1、从git上下载hexo后端。</p><p>2、安装hexo组件：</p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-cli -g </span><br><span class="line">npm install</span><br></pre></td></tr></tbody></table></figure><p>用<code>hexo -v</code>查看下是否成功。</p><p><strong>开发工具vscode配置：</strong></p><p>1、首先得安装git，并记下git的安装地址，下面要用。</p><p>2、按Ctrl+Shift+P，然后跟着下图去做：</p><p><img src="/2021/01/22/%E3%80%90%E5%85%A8%E5%A5%97%E6%95%99%E7%A8%8B%E3%80%91%E5%A6%82%E4%BD%95%E7%94%A8github-hex%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9F/clipboard-1611414330470.png" alt="img"></p><p>在settings.json中添加下面指令（如下图）：</p><figure class="highlight plain hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"terminal.integrated.shell.windows": "D:\\Program Files\\Git\\bin\\sh.exe",</span><br></pre></td></tr></tbody></table></figure><p><img src="/2021/01/22/%E3%80%90%E5%85%A8%E5%A5%97%E6%95%99%E7%A8%8B%E3%80%91%E5%A6%82%E4%BD%95%E7%94%A8github-hex%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9F/clipboard-1611414323421.png" alt="img"></p><p>最终效果图如下。你还能输入cmd或bash变来变去，很强大。</p><p><img src="/2021/01/22/%E3%80%90%E5%85%A8%E5%A5%97%E6%95%99%E7%A8%8B%E3%80%91%E5%A6%82%E4%BD%95%E7%94%A8github-hex%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9F/clipboard-1611414315460.png" alt="img"></p><p>还有各种各样shell相关的辅助插件，详细见博文：<a href="https://www.cnblogs.com/Sweettesting/p/13827376.html">https://www.cnblogs.com/Sweettesting/p/13827376.html</a></p><p><strong>如果git add出现 “fatal: in unpopulated submodule XXX” 错误怎么办？</strong></p><p>看这里：<a href="https://blog.csdn.net/qq_36337754/article/details/105425528">https://blog.csdn.net/qq_36337754/article/details/105425528</a></p></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搜索引擎高级搜索</title>
      <link href="2021/01/12/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E9%AB%98%E7%BA%A7%E6%90%9C%E7%B4%A2/"/>
      <url>2021/01/12/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E9%AB%98%E7%BA%A7%E6%90%9C%E7%B4%A2/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p><strong>前言：</strong><br>通过多次在谷歌和百度上使用高级搜索，发现，百度与谷歌在收录词条和查询精度上均有较大差距，故推荐在谷歌上使用高级搜索以提高效率。</p><p><strong>常用的高级搜索指令：</strong><br>site，filetype，逻辑与或、逻辑非、双引号、通配符*、intitle、allintitle、inurl、allinurl、intext、allintext</p><p><strong>更详细：</strong><br>更详细的高级搜索看下面这篇博文，包括搜索引擎高级搜索和本地搜索，整理得非常直观非常好：<br><a href="https://cloud.tencent.com/developer/article/1464793">https://cloud.tencent.com/developer/article/1464793</a></p></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> 搜索技巧 </tag>
            
            <tag> 检索 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
